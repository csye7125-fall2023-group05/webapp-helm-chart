---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: webapp
    service: api
spec:
  replicas: {{.Values.replicaCount}}
  selector:
    matchLabels:
      app: webapp
      service: api
  progressDeadlineSeconds: 120
  minReadySeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: webapp
        service: api
    spec:
      containers:
        - name: {{.Chart.Name}}
          image: {{ .Values.image.containerImg }}
          imagePullPolicy: {{.Values.image.pullPolicy}}
          ports:
            - name: http
              containerPort: {{.Values.service.port}}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{.Values.probes.path}}
              port: {{.Values.service.port}}
            initialDelaySeconds: 7
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 7
          readinessProbe:
            httpGet:
              path: {{.Values.probes.path}}
              port: {{.Values.service.port}}
            initialDelaySeconds: 7
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 7
          env:
            - name: HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: app_hostname
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: app_port
            - name: DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: app_db
            - name: DBUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: flyway_user
            - name: DBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: flyway_password
            - name: DBHOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: app_dbhost
            - name: DBPORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: app_dbport
            - name: DBSCHEMA
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: app_dbschema
      initContainers:
        - name: db-migration
          image: {{ .Values.image.initContainerImg }}
          imagePullPolicy: {{.Values.image.pullPolicy}}
          # set environment variables for flyway db migration
          env:
            - name: FLYWAY_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: flyway_url
            - name: FLYWAY_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: flyway_user
            - name: FLYWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: flyway_password
            - name: DBSCHEMA
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: app_dbschema
          command: ["flyway", "migrate"]
